services:
  nocodb:
    image: "nocodb/nocodb:latest"
    container_name: nocodb
    depends_on:
      nocodb_mysql:
        condition: service_healthy
    environment:
      NC_DB: "mysql2://nocodb_mysql:3306?u=noco&p=password&d=root_db"
    ports:
      - "8765:8080"
    restart: always
    volumes:
      - "nocodb_data:/usr/app/data"
    networks:
      - nocode-net
      - infra_net  # To connect with main MySQL

  # Deprecated
  nocodb_mysql:
    image: "mysql:8.3.0"
    container_name: nocodb_mysql
    environment:
      MYSQL_DATABASE: root_db
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: noco
    healthcheck:
      retries: 10
      test:
        - CMD
        - mysqladmin
        - ping
        - "-h"
        - localhost
      timeout: 20s
    restart: always
    volumes:
      - "nocodb_mysql_data:/var/lib/mysql"
    ports:
      - "3307:3306"  # Changed port to avoid conflict with main MySQL
    networks:
      - nocode-net

  # Deprecated
  nocobase:
    image: nocobase/nocobase:latest
    container_name: nocobase
    env_file:
      - shared.env
    environment:
      - APP_KEY=${NOCOBASRE_APP_KEY}
      - DB_DIALECT=mysql
      - DB_HOST=mysql
      - DB_DATABASE=nocobase
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_UNDERSCORED=true
    volumes:
      - nocobase:/app/nocobase/storage
    ports:
      - "13000:13000"
    networks:
      - nocode-net
      - infra_net  # To connect with main MySQL

  budibase-frontend:
    restart: unless-stopped
    image: budibase/apps
    environment:
      SELF_HOSTED: 1
      COUCH_DB_URL: http://${COUCHDB_USER}:${COUCHDB_PASSWORD}@couchdb:5984
      WORKER_URL: http://budibase-backend:4003
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      BUDIBASE_ENVIRONMENT: ${BUDIBASE_ENVIRONMENT}
      PORT: 4002
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: info
      ENABLE_ANALYTICS: "true"
      REDIS_URL: redis-service:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      BB_ADMIN_USER_EMAIL: ${BB_ADMIN_USER_EMAIL}
      BB_ADMIN_USER_PASSWORD: ${BB_ADMIN_USER_PASSWORD}
      PLUGINS_DIR: ${PLUGINS_DIR}
      OFFLINE_MODE: ${OFFLINE_MODE:-}
    depends_on:
      - budibase-backend
      - redis-service
    networks:
      - nocode-net
      - infra_net
  #    volumes:
  #      - /some/path/to/plugins:/plugins

  budibase-backend:
    restart: unless-stopped
    image: budibase/worker
    environment:
      SELF_HOSTED: 1
      PORT: 4003
      CLUSTER_PORT: ${MAIN_PORT}
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URL: http://minio:9000
      APPS_URL: http://budibase-frontend:4002
      COUCH_DB_USERNAME: ${COUCHDB_USER}
      COUCH_DB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCH_DB_URL: http://${COUCHDB_USER}:${COUCHDB_PASSWORD}@couchdb:5984
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      REDIS_URL: redis-service:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      OFFLINE_MODE: ${OFFLINE_MODE:-}
    depends_on:
      - redis-service
    networks:
      - nocode-net
      - infra_net

  proxy-service:
    restart: unless-stopped
    ports:
      - "${MAIN_PORT}:10000"
    image: budibase/proxy
    environment:
      - PROXY_RATE_LIMIT_WEBHOOKS_PER_SECOND=10
      - PROXY_RATE_LIMIT_API_PER_SECOND=20
      - APPS_UPSTREAM_URL=http://budibase-frontend:4002
      - WORKER_UPSTREAM_URL=http://budibase-backend:4003
      - MINIO_UPSTREAM_URL=http://minio:9000
      - COUCHDB_UPSTREAM_URL=http://couchdb:5984
      - RESOLVER=127.0.0.11
    depends_on:
      - budibase-backend
      - budibase-frontend
    networks:
      - nocode-net
      - infra_net
  
  couchdb:
    restart: unless-stopped
    image: budibase/couchdb:v3.3.3-sqs-v2.1.1
    environment:
      - COUCHDB_PASSWORD=${COUCH_DB_PASSWORD}
      - COUCHDB_USER=${COUCH_DB_USER}
      - TARGETBUILD=docker-compose
    volumes:
      - couchdb_data:/opt/couchdb/data
    networks:
      - nocode-net

  # TODO: use infra
  redis-service:
    restart: unless-stopped
    image: redis
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    networks:
      - nocode-net


networks:
  nocode-net:
    name: nocode_network
    driver: bridge
  infra_net:
    name: infrastructure_network
    external: true  # Use the existing infra network

volumes:
  nocodb_mysql_data:
  nocodb_data:
  nocobase:
  redis_data:
  couchdb_data: