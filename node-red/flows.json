[
    {
        "id": "ff23a045aaeb1a04",
        "type": "tab",
        "label": "paperwork",
        "disabled": true,
        "info": ""
    },
    {
        "id": "6f5c0c4c385d0ca8",
        "type": "tab",
        "label": "B.Cs Student to tweet",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f4db1daabc9dfc5d",
        "type": "tab",
        "label": "Catch and Debug",
        "disabled": false,
        "info": ""
    },
    {
        "id": "af30e016d4a15d8c",
        "type": "tab",
        "label": "Testing",
        "disabled": true,
        "info": "What is description?"
    },
    {
        "id": "3256cc19463b1083",
        "type": "telegram bot",
        "botname": "baruchiro_bot",
        "usernames": "baruchiro",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "835f623edf3d3d87",
        "type": "telegram bot",
        "botname": "baruch_test_bot",
        "usernames": "baruchiro",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "c9095347a33df346",
        "type": "dropbox-config",
        "name": "Upload to dropbox"
    },
    {
        "id": "65fe31c1cbed3b21",
        "type": "twitter-credentials",
        "screen_name": "baruchiro"
    },
    {
        "id": "8c261cce4ce242d3",
        "type": "telegram bot",
        "botname": "@BcsStudentBlogBot",
        "usernames": "baruchiro,BcsStudent",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "743ebdfa345dc8fc",
        "type": "twitter-credentials",
        "screen_name": "BcsStudent1"
    },
    {
        "id": "425fea3f754b7002",
        "type": "telegram receiver",
        "z": "ff23a045aaeb1a04",
        "name": "baruchiro_bot",
        "bot": "3256cc19463b1083",
        "saveDataDir": "/tmp",
        "filterCommands": false,
        "x": 70,
        "y": 220,
        "wires": [
            [
                "4db608faff874893",
                "b653cbf57d79a928"
            ],
            []
        ]
    },
    {
        "id": "3d1c5c1b623c8c3b",
        "type": "telegram sender",
        "z": "ff23a045aaeb1a04",
        "name": "Echo",
        "bot": "3256cc19463b1083",
        "haserroroutput": false,
        "outputs": 1,
        "x": 290,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2b9e7cfd0c19bce3",
        "type": "catch",
        "z": "ff23a045aaeb1a04",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 100,
        "wires": [
            [
                "3103e475cf2ae6d6"
            ]
        ]
    },
    {
        "id": "4db608faff874893",
        "type": "switch",
        "z": "ff23a045aaeb1a04",
        "name": "IsFile",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "document",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "8c957437c1571621"
            ],
            [
                "3d1c5c1b623c8c3b"
            ]
        ]
    },
    {
        "id": "20636f59.fed13",
        "type": "telegram event",
        "z": "af30e016d4a15d8c",
        "name": "",
        "bot": "835f623edf3d3d87",
        "event": "callback_query",
        "autoanswer": true,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "f0a3c788.7bbb18"
            ]
        ]
    },
    {
        "id": "d0ae190d.071828",
        "type": "telegram sender",
        "z": "af30e016d4a15d8c",
        "name": "show inline keyboard",
        "bot": "835f623edf3d3d87",
        "haserroroutput": false,
        "outputs": 1,
        "x": 582.7594223022461,
        "y": 233.3033103942871,
        "wires": [
            [
                "23220303.4a427c"
            ]
        ]
    },
    {
        "id": "3426758a.a2d09a",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "initial inline keyboard message",
        "func": "context.global.keyboard = { messageId : msg.payload.messageId };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": \"Yes\",\n                    \"callback_data\": \"FOO YES\"            \n                }, \n                {\n                    \"text\": \"No\",\n                    \"callback_data\": \"FOO NO\"            \n                }]\n            ]\n  })\n};\n\nmsg.payload.content = 'Do you want to hide the inline keyboard?';\nmsg.payload.options = opts;\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 321.7592468261719,
        "y": 234.3032283782959,
        "wires": [
            [
                "d0ae190d.071828"
            ]
        ]
    },
    {
        "id": "d7bfbd4.da4e34",
        "type": "telegram command",
        "z": "af30e016d4a15d8c",
        "name": "/foo",
        "command": "/foo",
        "description": "",
        "registercommand": false,
        "language": "",
        "bot": "835f623edf3d3d87",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 102.75931549072266,
        "y": 240.3032102584839,
        "wires": [
            [
                "3426758a.a2d09a"
            ]
        ]
    },
    {
        "id": "43cecef5.e2e93",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "YES REALLY",
        "func": "// Hide the keyboard and forget the messageId\nmsg.payload.type = 'deleteMessage';\nmsg.payload.content = context.global.keyboard.messageId\ncontext.global.keyboard.messageId = null;\n\n// You could also send a editMessageReplyMarkup with an empty reply_markup here\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 340,
        "wires": [
            [
                "8e746981.f48368"
            ]
        ]
    },
    {
        "id": "8e746981.f48368",
        "type": "telegram sender",
        "z": "af30e016d4a15d8c",
        "name": "",
        "bot": "835f623edf3d3d87",
        "haserroroutput": false,
        "outputs": 1,
        "x": 810,
        "y": 340,
        "wires": [
            [
                "2e9b911.c6c726e"
            ]
        ]
    },
    {
        "id": "2c6089c4.883006",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "YES",
        "func": "// This is the message id of the initial keyboard that is simply exchanged by a new one.\nvar messageId = context.global.keyboard.messageId;\n\n// This is a sample of how to send a second inline keyboard with modified buttons\nvar reply_markup = JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": \"Are you really sure?\",\n                    \"callback_data\": \"FOO YES REALLY\"            \n                }, \n                {\n                    \"text\": \"No\",\n                    \"callback_data\": \"FOO NO\"            \n                }]\n            ]\n  });\n\n\nvar options = {\n    chat_id : msg.payload.chatId,\n    reply_markup : reply_markup,\n    message_id : messageId\n};\n\nmsg.payload.type = 'editMessageReplyMarkup';\nmsg.payload.content = reply_markup;\nmsg.payload.options = options;\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "8e746981.f48368"
            ]
        ]
    },
    {
        "id": "23220303.4a427c",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "save messageId",
        "func": "// We store the messageId to be able to edit this reply in the callback query. \ncontext.global.keyboard.messageId = msg.payload.sentMessageId;\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 800.6667861938477,
        "y": 233.6667127609253,
        "wires": [
            []
        ]
    },
    {
        "id": "2e9b911.c6c726e",
        "type": "debug",
        "z": "af30e016d4a15d8c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "f0a3c788.7bbb18",
        "type": "switch",
        "z": "af30e016d4a15d8c",
        "name": "check callback data",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FOO YES",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FOO YES REALLY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FOO NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "2c6089c4.883006"
            ],
            [
                "43cecef5.e2e93"
            ],
            [
                "8e23029e.001b7"
            ]
        ]
    },
    {
        "id": "8e23029e.001b7",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "NO",
        "func": "var show_alert = true; // you can set this to true to open a dialog with the answer in the client.\n\n// msg.payload.content contains the callback data from the keyboard.\n// You may change this value here.\nmsg.payload.options = show_alert;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "8e746981.f48368"
            ]
        ]
    },
    {
        "id": "3f411e47456a5b8d",
        "type": "telegram receiver",
        "z": "af30e016d4a15d8c",
        "name": "get file",
        "bot": "835f623edf3d3d87",
        "saveDataDir": "/tmp",
        "filterCommands": false,
        "x": 110,
        "y": 420,
        "wires": [
            [
                "a0188dcb1af69b5d",
                "3fd1aa15c85379f7"
            ],
            []
        ]
    },
    {
        "id": "a0188dcb1af69b5d",
        "type": "telegram sender",
        "z": "af30e016d4a15d8c",
        "name": "",
        "bot": "835f623edf3d3d87",
        "haserroroutput": false,
        "outputs": 1,
        "x": 340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1a63cd06fc2ad258",
        "type": "dropbox out",
        "z": "ff23a045aaeb1a04",
        "dropbox": "c9095347a33df346",
        "filename": "",
        "localFilename": "",
        "name": "upload",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "8c957437c1571621",
        "type": "function",
        "z": "ff23a045aaeb1a04",
        "name": "build paperwork path",
        "func": "const messageDate = new Date(msg.payload.date * 1000)\nconst d = messageDate.toISOString().split('T')[0].replace('-', '').replace('-', '')\nconst t = messageDate.toISOString().split('T')[1].replace(':', '').replace(':', '_').slice(0,7)\nconst newmsg = {\n    filename: `papers/${d}_${t}/doc.pdf`,\n    localFilename: msg.payload.path\n}\n\nreturn newmsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 220,
        "wires": [
            [
                "1a63cd06fc2ad258"
            ]
        ]
    },
    {
        "id": "883b52b64f634108",
        "type": "status",
        "z": "ff23a045aaeb1a04",
        "name": "process updates",
        "scope": [
            "1a63cd06fc2ad258"
        ],
        "x": 660,
        "y": 280,
        "wires": [
            [
                "ee50849bab14874c"
            ]
        ]
    },
    {
        "id": "38901003ce055406",
        "type": "telegram sender",
        "z": "ff23a045aaeb1a04",
        "name": "",
        "bot": "3256cc19463b1083",
        "haserroroutput": false,
        "outputs": 1,
        "x": 660,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ee50849bab14874c",
        "type": "function",
        "z": "ff23a045aaeb1a04",
        "name": "",
        "func": "msg.payload = {\n    content: `${msg.status.source.name || msg.status.source.type} -> ${msg.status.text}`,\n    type: \"message\",\n    chatId: flow.get(\"chatId\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 320,
        "wires": [
            [
                "38901003ce055406"
            ]
        ]
    },
    {
        "id": "b653cbf57d79a928",
        "type": "change",
        "z": "ff23a045aaeb1a04",
        "name": "Save chatId",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "flow",
                "to": "payload.chatId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3103e475cf2ae6d6",
        "type": "link out",
        "z": "ff23a045aaeb1a04",
        "name": "",
        "links": [
            "2086072a2e5d6b1e"
        ],
        "x": 295,
        "y": 100,
        "wires": []
    },
    {
        "id": "2086072a2e5d6b1e",
        "type": "link in",
        "z": "f4db1daabc9dfc5d",
        "name": "catch",
        "links": [
            "3103e475cf2ae6d6",
            "c702dea8ceaab124"
        ],
        "x": 125,
        "y": 120,
        "wires": [
            [
                "6d57996a0ce059d5",
                "0ffddb7577fdc29b"
            ]
        ]
    },
    {
        "id": "6d57996a0ce059d5",
        "type": "debug",
        "z": "f4db1daabc9dfc5d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 120,
        "wires": []
    },
    {
        "id": "b8b6d0bc65c4383a",
        "type": "telegram sender",
        "z": "f4db1daabc9dfc5d",
        "name": "send test bot",
        "bot": "835f623edf3d3d87",
        "haserroroutput": false,
        "outputs": 1,
        "x": 530,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "0ffddb7577fdc29b",
        "type": "function",
        "z": "f4db1daabc9dfc5d",
        "name": "",
        "func": "msg.payload = {\n    type: \"message\",\n    content: `ERROR in ${msg.error.source.name || msg.error.source.type}:\n    ${msg.error.message }`,\n    chatId: 50573760\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 200,
        "wires": [
            [
                "b8b6d0bc65c4383a"
            ]
        ]
    },
    {
        "id": "6a554971d75cd7e6",
        "type": "feedparse",
        "z": "6f5c0c4c385d0ca8",
        "name": "ברוך אודם - B.Cs Student",
        "url": "https://bscstudent.netlify.app/feed.xml",
        "interval": 15,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "c47bab2ec04d7cae"
            ]
        ]
    },
    {
        "id": "102468eb1a1eaab9",
        "type": "twitter out",
        "z": "6f5c0c4c385d0ca8",
        "twitter": "65fe31c1cbed3b21",
        "name": "Tweet",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "65d4487579214af8",
        "type": "function",
        "z": "6f5c0c4c385d0ca8",
        "name": "prepare tweet",
        "func": "const postLink = msg.topic;\nconst { title } = msg.article;\n\nconst tweet = `פוסט חדש בבלוג:\n\n${title}\n\n${postLink}\n\n#nodered2twitter @BcsStudent1`\n\nmsg = {\n    payload: tweet,\n    media: undefined,\n    params: undefined\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "102468eb1a1eaab9"
            ]
        ]
    },
    {
        "id": "138ead0a7cf0a685",
        "type": "catch",
        "z": "6f5c0c4c385d0ca8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "c702dea8ceaab124"
            ]
        ]
    },
    {
        "id": "c702dea8ceaab124",
        "type": "link out",
        "z": "6f5c0c4c385d0ca8",
        "name": "",
        "links": [
            "2086072a2e5d6b1e"
        ],
        "x": 335,
        "y": 80,
        "wires": []
    },
    {
        "id": "c47bab2ec04d7cae",
        "type": "switch",
        "z": "6f5c0c4c385d0ca8",
        "name": "if handled",
        "property": "feeds",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "article.guid",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "36387cfda3563c80"
            ],
            [
                "a16e0f836e860784"
            ]
        ]
    },
    {
        "id": "a16e0f836e860784",
        "type": "function",
        "z": "6f5c0c4c385d0ca8",
        "name": "save as handled",
        "func": "const feeds = flow.get(\"feeds\") || []\nflow.set(\"feeds\", [...feeds, msg.article.guid])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "65d4487579214af8",
                "f92b6de415468444"
            ]
        ]
    },
    {
        "id": "36387cfda3563c80",
        "type": "join",
        "z": "6f5c0c4c385d0ca8",
        "name": "All old messages",
        "mode": "custom",
        "build": "array",
        "property": "topic",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 100,
        "wires": [
            [
                "3fb0ac8cfb6314c7",
                "fb00412849880063"
            ]
        ]
    },
    {
        "id": "3fb0ac8cfb6314c7",
        "type": "debug",
        "z": "6f5c0c4c385d0ca8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 60,
        "wires": []
    },
    {
        "id": "fb00412849880063",
        "type": "function",
        "z": "6f5c0c4c385d0ca8",
        "name": "message",
        "func": "msg.payload = `${msg.topic.length} already handled`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 100,
        "wires": [
            [
                "7d0f47b987404b7e"
            ]
        ]
    },
    {
        "id": "a0cc6bbfa5f9fce0",
        "type": "telegram sender",
        "z": "6f5c0c4c385d0ca8",
        "name": "Post to channel",
        "bot": "8c261cce4ce242d3",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1080,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8c09cbfc358d70b3",
        "type": "link in",
        "z": "f4db1daabc9dfc5d",
        "name": "payload string to test bot",
        "links": [
            "7d0f47b987404b7e"
        ],
        "x": 115,
        "y": 300,
        "wires": [
            [
                "498e1062ec1041b0"
            ]
        ],
        "info": "Receive a `msg.payload` string and send it to the Test Bot"
    },
    {
        "id": "498e1062ec1041b0",
        "type": "function",
        "z": "f4db1daabc9dfc5d",
        "name": "Build test message",
        "func": "msg.payload = {\n    type: \"message\",\n    content: msg.payload,\n    chatId: 50573760\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "b8b6d0bc65c4383a"
            ]
        ]
    },
    {
        "id": "7d0f47b987404b7e",
        "type": "link out",
        "z": "6f5c0c4c385d0ca8",
        "name": "send test message",
        "links": [
            "8c09cbfc358d70b3"
        ],
        "x": 995,
        "y": 100,
        "wires": []
    },
    {
        "id": "ef4337cc3ca07f6a",
        "type": "inject",
        "z": "af30e016d4a15d8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "093a73ad2a3cbcdb"
            ]
        ]
    },
    {
        "id": "f27d31457127ceec",
        "type": "telegram sender",
        "z": "af30e016d4a15d8c",
        "name": "",
        "bot": "8c261cce4ce242d3",
        "haserroroutput": false,
        "outputs": 1,
        "x": 500,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "093a73ad2a3cbcdb",
        "type": "function",
        "z": "af30e016d4a15d8c",
        "name": "",
        "func": "msg.payload = {\n    type: \"message\",\n    content: msg.payload,\n    chatId: \"@BcsStudent\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "f27d31457127ceec"
            ]
        ]
    },
    {
        "id": "f92b6de415468444",
        "type": "function",
        "z": "6f5c0c4c385d0ca8",
        "name": "",
        "func": "const postLink = msg.topic;\nconst { title, summary } = msg.article;\n\nconst tweet = `פוסט חדש בבלוג:\n\n<a href=\"${postLink}\"><b>${title}</b></a>\n\n${summary}`\n\nmsg = {\n    payload: {\n        type: \"message\",\n        content: tweet,\n        chatId: \"@BcsStudent\",\n        options: {parse_mode : \"HTML\"}\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 220,
        "wires": [
            [
                "a0cc6bbfa5f9fce0"
            ]
        ]
    },
    {
        "id": "7e97656a1d967da7",
        "type": "twitter in",
        "z": "6f5c0c4c385d0ca8",
        "twitter": "743ebdfa345dc8fc",
        "tags": "#פידתכנות,#פיד_תכנות,#פיד_תוכנה,#פידתוכנה",
        "user": "false",
        "name": "",
        "inputs": 0,
        "x": 230,
        "y": 420,
        "wires": [
            [
                "66e045e882e2d6f4"
            ]
        ]
    },
    {
        "id": "7f831f300470afb0",
        "type": "twitter out",
        "z": "6f5c0c4c385d0ca8",
        "twitter": "743ebdfa345dc8fc",
        "name": "Retweet",
        "x": 980,
        "y": 420,
        "wires": []
    },
    {
        "id": "873dec41421eb216",
        "type": "change",
        "z": "6f5c0c4c385d0ca8",
        "name": "set retweet",
        "rules": [
            {
                "t": "set",
                "p": "retweet",
                "pt": "msg",
                "to": "tweet.id_str",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 420,
        "wires": [
            [
                "0e23eda3e7c403cb"
            ]
        ]
    },
    {
        "id": "66e045e882e2d6f4",
        "type": "switch",
        "z": "6f5c0c4c385d0ca8",
        "name": "dont retweet myself",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "tweets/BcsStudent1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 420,
        "wires": [
            [],
            [
                "873dec41421eb216"
            ]
        ]
    },
    {
        "id": "0e23eda3e7c403cb",
        "type": "delay",
        "z": "6f5c0c4c385d0ca8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "60",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "7f831f300470afb0"
            ]
        ]
    },
    {
        "id": "3fd1aa15c85379f7",
        "type": "debug",
        "z": "af30e016d4a15d8c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 500,
        "wires": []
    }
]