services:
  # TODO: use redis from infra-stack.yml
  paperless-broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - paperless-redisdata:/data
    networks:
      - paperless_net

  paperless-web:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless-broker
      - paperless-gotenberg
      - paperless-tika
    ports:
      - "3355:8000"
    volumes:
      - paperless-data:/usr/src/paperless/data
      - paperless-media:/usr/src/paperless/media
      - paperless-export:/usr/src/paperless/export
      - paperless-consume:/usr/src/paperless/consume
      - ./paperless/scripts:/usr/src/paperless/scripts
    env_file: paperless.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PAPERLESS_URL: https://paperless.${DOMAIN}
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.paperless-export.schedule: "@every 12h"
      ofelia.job-exec.paperless-export.command: "document_exporter ../export --delete --no-archive --no-thumbnail --use-folder-prefix --split-manifest"
    networks:
      - paperless_net

  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    ports:
      - "3000:3000"
    networks:
      - paperless_net

  paperless-tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    ports:
      - "9998:9998"
    networks:
      - paperless_net
  
  paperless-mcp:
    # port 3000
    image: ghcr.io/baruchiro/baruchiro/paperless-mcp:main
    restart: unless-stopped
    env_file:
      - shared.env
    environment:
      PAPERLESS_URL: http://paperless-web:8000
      PAPERLESS_API_KEY: ${PAPERLESS_API_KEY}
    networks:
      - paperless_net
      - infra_net

  # This is here because it must start last
  # https://github.com/mcuadros/ofelia/pull/137
  ofelia:
    image: mcuadros/ofelia:latest
    env_file:
      - shared.env
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  paperless_net:
    name: paperless_network
    driver: bridge
  infra_net:
    name: infrastructure_network
    external: true  # Use the existing infra network

volumes:
  paperless-redisdata:
  paperless-data:
  paperless-media:
  paperless-export:
    driver: rclone
    driver_opts:
      remote: 'remote-gdrive:paperless'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0
  paperless-consume:
